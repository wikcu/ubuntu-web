name: Pull and Push Docker Image

on:
  push:
    tags:
      - '*.*'

jobs:
  pull-and-upload-digest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v3

      - name: Set Tag Name
        run: echo "tag=$(echo ${GITHUB_REF#refs/tags/})" >> $GITHUB_ENV
        shell: bash


      - 
        name: Project Name to Lowercase
        run: echo "PROJECT_NAME=$(basename ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      # - 
      #   name: Set Platform Suffix
      #   run: |
      #     if [[ ${{ matrix.platform }} == "linux/amd64" ]]; then
      #       echo "PLATFORM_SUFFIX=amd64" >> $GITHUB_ENV
      #     elif [[ ${{ matrix.platform }} == "linux/arm64" ]]; then
      #       echo "PLATFORM_SUFFIX=arm64" >> $GITHUB_ENV
      #     fi

      - 
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      -
        name: Pull Image
        run: docker pull --platform ${{ matrix.platform }} ${{ secrets.DOCKERHUB_SOURCE }}/${{ env.PROJECT_NAME }}:${{ env.tag }}


      - name: Get Image Digest
        id: get_digest
        run: |
          mkdir -p /tmp/digests
          digest_full=$(docker inspect --format='{{index .RepoDigests 0}}' ${{ secrets.DOCKERHUB_SOURCE }}/${{ env.PROJECT_NAME }}:${{ env.tag }})
          digest=${digest_full##*@sha256:}
          echo "${{ matrix.platform }} - Digest: $digest"
          touch "/tmp/digests/$digest"

      -
        name: Upload digest
        uses: actions/upload-artifact@v3
        with:
          name: digests
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

      # -
      #   name: Tag Image
      #   run: docker tag ${{ secrets.DOCKERHUB_SOURCE }}/${{ env.PROJECT_NAME }}:${{ steps.tag_name.outputs.tag }} ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.PROJECT_NAME }}:${{ steps.tag_name.outputs.tag }}-${{ env.PLATFORM_SUFFIX }}

      # -
      #   name: Push Image
      #   run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.PROJECT_NAME }}:${{ steps.tag_name.outputs.tag }}-${{ env.PLATFORM_SUFFIX }}

      # -
      #   name: Export Digest
      #   id: export_digest
      #   run: |
      #     digest=$(docker inspect --format='{{index .RepoDigests 0}}' ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.PROJECT_NAME }}:${{ steps.tag_name.outputs.tag }}-${{ env.PLATFORM_SUFFIX }})
      #     echo "digest=$digest" >> $GITHUB_ENV


  merge:
    runs-on: ubuntu-latest
    needs:
      - pull-and-upload-digest
    steps:

      - name: Set Tag Name
        run: echo "tag=$(echo ${GITHUB_REF#refs/tags/})" >> $GITHUB_ENV
        shell: bash
        
      -
        name: Owner names
        run: |
          GITOWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')
          echo "GITOWNER=$GITOWNER" >> ${GITHUB_ENV}
      - 
        name: project name to lowercase
        run: echo "PROJECT_NAME=$(basename ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> ${GITHUB_ENV}
      -
        name: set registry_image
        run: echo "REGISTRY_IMAGE=${GITOWNER}/${PROJECT_NAME}" >> ${GITHUB_ENV}
      -
        name: Download digests
        uses: actions/download-artifact@v3
        with:
          name: digests
          path: /tmp/digests


      - name: Ls Digest
        id: ls_digest
        run: |
          cd /tmp/digests
          ls -l
        shell: bash

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY_IMAGE }}
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)
      -
        name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}